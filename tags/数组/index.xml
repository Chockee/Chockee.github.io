<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数组 on Keep Hungry Keep Study</title>
    <link>https://chockee.github.io/tags/%E6%95%B0%E7%BB%84/</link>
    <description>Recent content in 数组 on Keep Hungry Keep Study</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chockee.github.io/tags/%E6%95%B0%E7%BB%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数组中出现次数超过一半的数字</title>
      <link>https://chockee.github.io/post/%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://chockee.github.io/post/%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97/</guid>
      <description>题目描述 数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。
解题思路 第一个想法是先对数组做排序，然后依次统计每个数字出现的次数，如果遇到了出现次数超过一半的数字就返回这个数，如果遍历完数组还没有这个数，就返回0； 因为Arrays.sort()使用了快速排序，所以时间复杂度是O(nlogn)，空间复杂度是O(1)
实现代码 import java.util.Arrays; public int MoreThanHalfNum_Solution(int [] array) { //先考虑边界情况 if(array.length == 1)return array[0]; Arrays.sort(array); int times = 1; for(int i = 1; i &amp;lt; array.length; i++){ if(array[i] == array[i - 1]){ times++; if(times &amp;gt; array.length/2)return array[i]; }else times = 1; } return 0; }  更好的方法 如果一个数字，它的出现次数超过一半，那么就意味着：其他数字跟它依次两两抵消，直到其他数字都被抵消完后，这个出现次数超过一半的数，还会有剩余的“幸存者”。
我们尝试生成两个变量，初始值为1的count用于计数和ansNum来记录“幸存”的数字，遍历数组，如果和前一个数字相等，则相互抵消，count--，相等则count++。如果count为0，则令ansNum等于当前的数字，并令count为1，重新开始计数。如果最后count大于1，则这个幸存的ansNum就是答案。 上述思路有个漏洞就是，假如前面的数字两两抵消，到最后一个数字突然出现，此时count重新计数，且ansNum等于它，就被最后这个数给“偷鸡”了，所以我们最后还要遍历一边数组，确认这个数的出现次数大于一半。
实现代码 public int MoreThanHalfNum_Solution(int [] array) { if(array.length == 1)return array[0]; int count = 1, ansNum = array[0]; for(int i = 1; i &amp;lt; array.</description>
    </item>
    
  </channel>
</rss>